// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TCStudentRecordManagement.Models;

namespace TCStudentRecordManagement.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201005043936_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TCStudentRecordManagement.Models.Cohort", b =>
                {
                    b.Property<int>("CohortID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CohortID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CohortID");

                    b.ToTable("cohorts");
                });

            modelBuilder.Entity("TCStudentRecordManagement.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BearTracksID")
                        .HasColumnName("BearTracksID")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CohortID")
                        .HasColumnName("CohortID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("StudentID");

                    b.HasIndex("CohortID");

                    b.HasIndex("UserID");

                    b.ToTable("students");
                });

            modelBuilder.Entity("TCStudentRecordManagement.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("varchar(320)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnName("Firstname")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnName("Lastname")
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("Rights")
                        .HasColumnName("Rights")
                        .HasColumnType("tinyint");

                    b.HasKey("UserID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TCStudentRecordManagement.Models.Student", b =>
                {
                    b.HasOne("TCStudentRecordManagement.Models.Cohort", "CohortMember")
                        .WithMany("Students")
                        .HasForeignKey("CohortID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TCStudentRecordManagement.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
