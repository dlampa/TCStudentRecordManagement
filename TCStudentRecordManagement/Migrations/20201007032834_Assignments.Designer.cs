// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TCStudentRecordManagement.Models;

namespace TCStudentRecordManagement.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201007032834_Assignments")]
    partial class Assignments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TCStudentRecordManagement.Models.Assignment", b =>
                {
                    b.Property<int>("AssignmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AssignmentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CohortID")
                        .HasColumnName("CohortID")
                        .HasColumnType("int");

                    b.Property<string>("DocURL")
                        .HasColumnName("DocURL")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TopicID")
                        .HasColumnName("TopicID")
                        .HasColumnType("int");

                    b.Property<int>("TypeID")
                        .HasColumnName("TypeID")
                        .HasColumnType("int");

                    b.HasKey("AssignmentID");

                    b.HasIndex("CohortID")
                        .HasName("FK_Assignment_Cohort");

                    b.HasIndex("TopicID")
                        .HasName("FK_Assignment_Topic");

                    b.HasIndex("TypeID")
                        .HasName("FK_Assignment_AssignmentType");

                    b.ToTable("assignments");
                });

            modelBuilder.Entity("TCStudentRecordManagement.Models.AssignmentType", b =>
                {
                    b.Property<int>("TypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasColumnType("varchar(50)");

                    b.HasKey("TypeID");

                    b.ToTable("assignment_types");

                    b.HasData(
                        new
                        {
                            TypeID = -1,
                            Description = "Practice"
                        },
                        new
                        {
                            TypeID = -2,
                            Description = "Weekend assignment"
                        },
                        new
                        {
                            TypeID = -3,
                            Description = "Milestone"
                        },
                        new
                        {
                            TypeID = -4,
                            Description = "Capstone"
                        });
                });

            modelBuilder.Entity("TCStudentRecordManagement.Models.Cohort", b =>
                {
                    b.Property<int>("CohortID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CohortID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CohortID");

                    b.ToTable("cohorts");

                    b.HasData(
                        new
                        {
                            CohortID = -1,
                            EndDate = new DateTime(2020, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "4.1 Summer/Autumn 2020",
                            StartDate = new DateTime(2020, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CohortID = -2,
                            EndDate = new DateTime(2020, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "4.2 Autumn/Winter 2020",
                            StartDate = new DateTime(2020, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TCStudentRecordManagement.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BearTracksID")
                        .HasColumnName("BearTracksID")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CohortID")
                        .HasColumnName("CohortID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("StudentID");

                    b.HasIndex("CohortID")
                        .HasName("FK_Student_Cohort");

                    b.HasIndex("UserID")
                        .HasName("FK_Student_User");

                    b.ToTable("students");

                    b.HasData(
                        new
                        {
                            StudentID = -1,
                            CohortID = -1,
                            UserID = 1
                        },
                        new
                        {
                            StudentID = -2,
                            CohortID = -1,
                            UserID = 2
                        },
                        new
                        {
                            StudentID = -3,
                            CohortID = -1,
                            UserID = 3
                        },
                        new
                        {
                            StudentID = -4,
                            CohortID = -2,
                            UserID = 4
                        },
                        new
                        {
                            StudentID = -5,
                            CohortID = -2,
                            UserID = 5
                        });
                });

            modelBuilder.Entity("TCStudentRecordManagement.Models.Topic", b =>
                {
                    b.Property<int>("TopicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TopicID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasColumnType("varchar(50)");

                    b.HasKey("TopicID");

                    b.ToTable("topics");

                    b.HasData(
                        new
                        {
                            TopicID = -1,
                            Description = "C# fundamentals"
                        },
                        new
                        {
                            TopicID = -2,
                            Description = "HTML5 and CSS"
                        },
                        new
                        {
                            TopicID = -3,
                            Description = "Javascript fundamentals"
                        },
                        new
                        {
                            TopicID = -4,
                            Description = "Javascript AJAX and API"
                        },
                        new
                        {
                            TopicID = -5,
                            Description = "React fundamentals"
                        },
                        new
                        {
                            TopicID = -6,
                            Description = "React/Redux"
                        },
                        new
                        {
                            TopicID = -7,
                            Description = "SQL fundamentals"
                        },
                        new
                        {
                            TopicID = -8,
                            Description = "Wordpress"
                        },
                        new
                        {
                            TopicID = -9,
                            Description = "PHP fundamentals"
                        },
                        new
                        {
                            TopicID = -10,
                            Description = "PHP APIs"
                        },
                        new
                        {
                            TopicID = -11,
                            Description = "C# OOP"
                        },
                        new
                        {
                            TopicID = -12,
                            Description = "C# Entity Framework"
                        },
                        new
                        {
                            TopicID = -13,
                            Description = "C# MVC"
                        },
                        new
                        {
                            TopicID = -14,
                            Description = "C# WebAPI"
                        },
                        new
                        {
                            TopicID = -15,
                            Description = "C# WebAPI and React"
                        });
                });

            modelBuilder.Entity("TCStudentRecordManagement.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("varchar(320)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnName("Firstname")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnName("Lastname")
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("Rights")
                        .HasColumnName("Rights")
                        .HasColumnType("tinyint");

                    b.HasKey("UserID");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "john.dough@abc.com",
                            Firstname = "John",
                            Lastname = "Dough",
                            Rights = (byte)1
                        },
                        new
                        {
                            UserID = 2,
                            Email = "anne.jackson@abc.com",
                            Firstname = "Anne",
                            Lastname = "Jackson",
                            Rights = (byte)1
                        },
                        new
                        {
                            UserID = 3,
                            Email = "ivan.patterson@abc.com",
                            Firstname = "Ivan",
                            Lastname = "Patterson",
                            Rights = (byte)1
                        },
                        new
                        {
                            UserID = 4,
                            Email = "trevor.noah@abc.com",
                            Firstname = "Trevor",
                            Lastname = "Noah",
                            Rights = (byte)1
                        },
                        new
                        {
                            UserID = 5,
                            Email = "peter.patsie@abc.com",
                            Firstname = "Peter",
                            Lastname = "Patsie",
                            Rights = (byte)1
                        },
                        new
                        {
                            UserID = 6,
                            Email = "jane.smitherson@abc.com",
                            Firstname = "Jane",
                            Lastname = "Smitherson",
                            Rights = (byte)2
                        });
                });

            modelBuilder.Entity("TCStudentRecordManagement.Models.Assignment", b =>
                {
                    b.HasOne("TCStudentRecordManagement.Models.Cohort", "AssignmentCohort")
                        .WithMany("Assignments")
                        .HasForeignKey("CohortID")
                        .HasConstraintName("FK_Assignment_Cohort")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TCStudentRecordManagement.Models.Topic", "AssignmentTopic")
                        .WithMany("Assignments")
                        .HasForeignKey("TopicID")
                        .HasConstraintName("FK_Assignment_Topic")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TCStudentRecordManagement.Models.AssignmentType", "Type")
                        .WithMany("Assignments")
                        .HasForeignKey("TypeID")
                        .HasConstraintName("FK_Assignment_AssignmentType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TCStudentRecordManagement.Models.Student", b =>
                {
                    b.HasOne("TCStudentRecordManagement.Models.Cohort", "CohortMember")
                        .WithMany("Students")
                        .HasForeignKey("CohortID")
                        .HasConstraintName("FK_Student_Cohort")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TCStudentRecordManagement.Models.User", "UserData")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
